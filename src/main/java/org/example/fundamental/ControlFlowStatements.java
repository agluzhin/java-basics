package org.example.fundamental;

public class ControlFlowStatements {
    /*
        ОДИНОЧНОЕ УСЛОВИЕ:
            1f (condition) {
                ...
            }
        Если condition true, то выполнится "...";

        ДВОЙНОЕ УСЛОВИЕ:
            if (condition) {
                ...
            } else {
                ...
            }
        Если condition false, то выполнится "..." из блока else;

        МНОЖЕСТВЕННОЕ УСЛОВИЕ:
            if (condition) {
                ...
            } else if (condition) {
                ...
            } else {
                ...
            }
        Если if-condition false, то проверится els if-condition, если и он true, то выполнится "..." из блока else if.

        ЦИКЛ "WHILE":
        while (condition) {
            ...
        }
        Сначала проверяется condition, а затем выполняется "..." пока оно true.

        ЦИКЛ "DO...WHILE":
        do {
            ...
        } while (condition);
        Выполняется "..." хотя бы один раз, затем проверится condition и продолжится выполнение "...", если оно true.

        ЦИКЛ "FOR":
        for (initialization; termination; increment) {
            ...
        }
        Инициализируется счетчик, для которого ставится условие выхода из цикла, он итеративно де-/ин-крементируется.

        ЦИКЛ "FOREACH":
        for (var item : items) {
            ...
        }
        Выполняется "..." для каждого элемента в каком-нибудь наборе данных.

        КЛЮЧЕВОЕ СЛОВО "BREAK":
        Необходимо для мгновенного выхода из цикла (прерывание дальнейших итераций).

        КЛЮЧЕВОЕ СЛОВО "CONTINUE":
        Необходимо для пропуска итерации в цикле.

        КЛЮЧЕВОЕ СЛОВО "RETURN":
        Необходимо для возврата полученного значения из метода, после него код не выполняется.

        КЛЮЧЕВОЕ СЛОВО "YIELD":
        Необходимо для выхода из ветвления switch...case и возврата следующего за ним значения.
    */
}
